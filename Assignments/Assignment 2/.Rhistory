readable <- gsub("NA"," ",paste(decode, collapse = ""))
return(readable)
}
secret
secret <- enigma(cyp)
secret
decode <- enigma(cyp)
decode
decode <- enigma(cyp)
secret <- enigma(cyp)
secret
enigma(cyp)
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
print(readable)
}
engima(cyp)
enigma(cyp)
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
return(readable)
print(readable)
}
enigma(cyp)
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
print(readable)
}
cff <- enigma(cyp)
cff
print("Your message is: ",readable)
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
print("Your message is: ",readable)
}
enigma(cyp)
print(c("Your message is: ",readable))
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
print(c("Your message is: ",readable))
}
enigma(cyp)
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
cat("Your message is: ",readable))
}
enigma <- function(cyp){
new_msg <- enter_message()
decode <- c()
for (i in new_msg){
char <- cyp[i]
decode <- append(decode,char)
}
readable <- gsub("NA"," ",paste(decode, collapse = ""))
cat("Your message is: ",readable)
}
enigma(cyp)
enigma(cyp)
View(config)
pox1 <- sample(letters)
pox1
pox2 <- sample(letters)
pox2
pox <- rbind(pox1,pox2)
pox
View(pox)
pox <- cbind(pox1,pox2)
View(pox)
Initial <- matrix(letters, nrow = 13)
Initial
######################################################
sample1 <- sample(letters, 13)
sample1
sample2 <- sample(setdiff(letters,sample1),13)
sample2
samples <- append(sample1,sample2)
samples
Initial <- matrix(samples, nrow = 13) #create 2 columns of letters
set1 <- sample(Initial[,1]) #shuffle column 1
set2 <- sample(Initial[,2]) #shuffle column 2
config <- cbind(set1,set2) #create new shuffled letters
View(config)
######################################################
sample1 <- sample(letters, 13) #choose 13 random letters
sample2 <- sample(setdiff(letters,sample1),13) #shuffle the other 13 random
samples <- append(sample1,sample2)
Initial <- matrix(samples, nrow = 13) #create 2 columns of letters
View(Initial)
new_code <- function(){
sets1 <- append(config[,"V1"],config[,"V2"])
sets2 <- append(config[,"V2"],config[,"V1"])
names(sets1) <- sets2
return(sets1)
}
ui <- new_code()
new_code <- function(){
sets1 <- append(Initial[,"V1"],Initial[,"V2"])
sets2 <- append(Initial[,"V2"],Initial[,"V1"])
names(sets1) <- sets2
return(sets1)
}
ui <- new_code()
Initial[,V1]
Initial[,"V1"]
Initial[,"1"]
Initial[,1]
new_code <- function(){
sets1 <- append(Initial[,1],Initial[,1])
sets2 <- append(Initial[,2],Initial[,2])
names(sets1) <- sets2
return(sets1)
}
ui <- new_code()
ui
}
new_code <- function(seed){
set.seed(seed)
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
samples <- append(sample1,sample2)
config <- matrix(samples, nrow = 13)
sets1 <- append(config[,1],config[,1])
sets2 <- append(config[,2],config[,2])
names(sets1) <- sets2
return(sets1)
}
ui <- new_code(2441)
ui
ui <- new_code(244)
ui
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
sample1
sample2
View(config)
new_code <- function(seed){
set.seed(seed)
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
samples <- append(sample1,sample2)
config <- matrix(samples, nrow = 13)
sets1 <- append(config[,1],config[,2])
sets2 <- append(config[,2],config[,1])
names(sets1) <- sets2
return(sets1)
}
ui <- new_code(2893)
ui
#function to allow allies to generate new plugboard config
new_code <- function(seed){
#set.seed to allow for different config to be generated
set.seed(seed)
#code replicated from above to get matrix
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
sets1 <- append(sample1,sample2)
sets2 <- append(sample2,sample1)
names(sets1) <- sets2
return(sets1)
}
ui <- new_code(212)
ui
#function with regex to check that message typed in is only alphabets
letters_only <- function(x) !grepl("[^A-Za-z ]", x)
#function to allow allies to generate new plugboard config
new_code <- function(){
seed <- readline(prompt = "Choose a new seed for a new configuration: ")
#set.seed to allow for different config to be generated
set.seed(seed)
#generate new key-pair value
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
sets1 <- append(sample1,sample2)
sets2 <- append(sample2,sample1)
names(sets1) <- sets2
return(sets1)
}
uni <- new_code()
uni
prob_win
prob_win3
Passcodes <- 10**5 #number of combinations
Passcodes
PB_config <- choose(26,13)*factorial(13)/2**13 #number of plugboard configs
PB_config
choose(26,13)
choose(4,2)
Poss_set <- Passcodes*PB_config #total number of configs
Poss_set
prob_A <- 300/1000
prob_B <- 500/1000
prob_C <- 200/1000
prob_f_givA <- 0.09
prob_f_givB <- 0.04
prob_f_givC <- 0.11
prob_f <- (prob_A*prob_f_givA) + (prob_B*prob_f_givB) + (prob_C*prob_f_givC)
prob_A_givf <- (prob_A*prob_f_givA)/prob_f
prob_B_givf <- (prob_B*prob_f_givB)/prob_f
prob_C_givf <- (prob_C*prob_f_givC)/prob_f
prob_A_givf
prob_B_givf
prob_C_givf
#function to encode and decode
enigma <- function(){
cyp <- new_code()
new_msg <- enter_message() #prompt for new message
decode <- c()
for (i in new_msg){
char <- cyp[i] #access PB config
decode <- append(decode,char) #add to encoded/decoded character list
}
readable <- gsub("NA"," ",paste(decode, collapse = "")) #make it easier to read
cat("Your message is: ",readable) #print out the encoded/decoded message
}
secret <- enigma()
#function to allow allies to generate new/input existing plugboard config
new_code <- function(){
seed <- readline(prompt = "Choose the seed for the configuration: ")
#set.seed to allow for different config to be generated
set.seed(seed)
#generate new key-pair value
sample1 <- sample(letters, 13)
sample2 <- sample(setdiff(letters,sample1),13)
sets1 <- append(sample1,sample2)
sets2 <- append(sample2,sample1)
names(sets1) <- sets2
return(sets1)
}
#function to check that message typed in is only alphabets
letters_only <- function(x) !grepl("[^A-Za-z ]", x)
#function to prompt user to enter new message
enter_message <- function(){
message <- readline(prompt="What is your message: ")
if (letters_only(message)==T){ #check if messages are alphabets
store <- strsplit(tolower(message),split="") #split and convert to lower letters
} else{
print("ERROR: Please type in only letters") #error msg if disallowed entry
}
return(store)
}
#function to encode and decode
enigma <- function(){
cyp <- new_code()
new_msg <- enter_message() #prompt for new message
decode <- c()
for (i in new_msg){
char <- cyp[i] #access PB config
decode <- append(decode,char) #add to encoded/decoded character list
}
readable <- gsub("NA"," ",paste(decode, collapse = "")) #make it easier to read
cat("Your message is: ",readable) #print out the encoded/decoded message
}
secret <- enigma()
unsecret <- enigma()
enigma()
enigma()
enigma
engima()
enigma()
source('~/GitHub/3rd Year Statistics/3rdYrStats/Assignments/Assignment 2/Assignment 2.R', echo=TRUE)
library(dplyr)
library(tidyr)
source('~/GitHub/3rd Year Statistics/3rdYrStats/Assignments/Assignment 2/Assignment 2.R', echo=TRUE)
library(ggplot2)
source('~/GitHub/3rd Year Statistics/3rdYrStats/Assignments/Assignment 2/Assignment 2.R', echo=TRUE)
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate(text, x = 10, y = c("48","64"), text="win")
scale_color_viridis_d() +
theme_bw()
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = 10, y = c("48","64"), text="win")
scale_color_viridis_d() +
theme_bw()
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = 10, y = c("48","64"), text="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = 10, y = c("48","64"), label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = 10, y = 48, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = 48, y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(48,52,98), y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(50,70,110,160), y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(50,62,110,160), y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(50,62,130,170), y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10, label="win") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10, label="win") +
annotate("text", x = c(60,90,120,132,137,210), y = 10, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10, label="win") +
annotate("text", x = c(60,90,120,132,137,210), y = -10, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 11, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10.3, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,2)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10.3, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10.3, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,1)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10.3, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10.3, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,1)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("text", x = c(52,57,130,170), y = 10.3, label="win") +
annotate("text", x = c(60,90,120,132,138,210), y = -10.3, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,1)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("label", x = c(52,57,130,170), y = 10.3, label="win") +
annotate("label", x = c(60,90,120,132,138,210), y = -10.3, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
plot <- walks %>% ggplot(aes(x=Round,y=Money,group=factor(game),color=factor(game))) +
geom_line(size=1) +
scale_y_continuous(breaks=seq(-10,10,1)) +
scale_x_continuous(breaks=seq(0,220,10)) +
labs(title="Outcome of 10 Games",x="No. of bets",y="Money",color="Game Number") +
annotate("label", x = c(52,57,130,170), y = 10.5, label="win") +
annotate("label", x = c(60,90,120,132,138,210), y = -10.5, label="lose") +
scale_color_viridis_d() +
theme_bw()
plot
enigma
engima()
enigma()
engima()
enigma()
enigma()
enigma()
