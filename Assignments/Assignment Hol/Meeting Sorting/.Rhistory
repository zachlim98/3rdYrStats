remove.packages("Rfast")
library(mapsapi)
library(tidyverse)
library(dplyr)
library(stringr)
# Google API key
key = "AIzaSyDmTh_LFt4SqVslqiwo3pFw8tMaAta6p0k"
# prepare regular expression
regexp <- "[[:digit:]]+"
data = read.csv("datas.csv") #import data
data$Bishan = 0
data$Tampines = 0
data$BuonaV = 0
data$HollandV = 0
destination_list = list("Bishan MRT, Singapore")
View(destination_list)
destination_list = list("Bishan MRT, Singapore","Tampines MRT, Singapore")
View(destination_list)
destination_list = list("Bishan MRT, Singapore","Tampines MRT, Singapore",
"Buona Vista MRT, Singapore", "Holland Village MRT, Singapore")
destination_list[1]
destination_list[2]
for (t in 1:4) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
doc = mp_directions(
origin = start_pt,
destination = destination_list[t],
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,t+3] <- converted
}
}
data = read.csv("datas.csv") #import data
data$Bishan = 0
data$Tampines = 0
data$BuonaV = 0
data$HollandV = 0
destination_list = list("Bishan MRT, Singapore","Tampines MRT, Singapore",
"Buona Vista MRT, Singapore", "Holland Village MRT, Singapore")
for (t in 1:4) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
doc = mp_directions(
origin = start_pt,
destination = destination_list[t],
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,t+3] <- converted
}
}
for (t in 1:4) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
end_pt = as.character(destination_list[t])
doc = mp_directions(
origin = start_pt,
destination = end_pt,
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,t+3] <- converted
}
}
View(data)
t
for (z in 1:4) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
end_pt = as.character(destination_list[z])
doc = mp_directions(
origin = start_pt,
destination = end_pt,
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,z+3] <- converted
}
}
View(data)
minimum=apply(data, 1, function(x) names((sort(x))[1]))
minimum2=apply(data, 1, function(x) names((sort(x))[2]))
minimum3=apply(data, 1, function(x) names((sort(x))[3]))
minimum4=apply(data, 1, function(x) names((sort(x))[4]))
data$first_choice <- minimum
data$second_choice <- minimum2
data$third_choice <- minimum3
data$fourth_choice <- minimum4
datat <- data %>%
select(Name, Region, c(first_choice:fourth_choice)) %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE)
View(datat)
datat[1,2]
datat[1,2] <- US
datat[1,2] <- "US"
View(datat)
datat <- datat %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE)
View(datat)
summarise(datat)
count(datat)
datat %>% count(Region, first_choice)
datat %>% count(Region, first_choice, second_choice)
datat %>% count(Region, first_choice, second_choice) %>% arrange(n)
datat %>% count(Region, first_choice, second_choice) %>% arrange(desc(n))
datat %>% count(Region, first_choice) %>% arrange(desc(n))
datat %>% count(Region, first_choice) %>% arrange(desc(n))
datat
datat %>% slice(2)
datat %>% slice(2) %>% Name
datat %>% slice(2) %>% select(Name)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice(8)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice_head(8)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice_head(n = 5)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice_head(n = 6)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice_head(n = 7)
datat %>% group_by(Region) %>% arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE) %>% slice_head(n = 8)
data = read.csv("datas.csv") #import data
data$Bishan = 0
data$Tampines = 0
data$BuonaV = 0
data$HollandV = 0
data$Lakeside = 0
destination_list = list("Bishan MRT, Singapore","Tampines MRT, Singapore",
"Buona Vista MRT, Singapore", "Holland Village MRT, Singapore,
Lakeside MRT, Singapore")
for (z in 1:5) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
end_pt = as.character(destination_list[z])
doc = mp_directions(
origin = start_pt,
destination = end_pt,
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,z+3] <- converted
}
}
View(data)
destination_list = list("Bishan MRT, Singapore","Tampines MRT, Singapore",
"Buona Vista MRT, Singapore", "Holland Village MRT, Singapore",
"Boon Lay MRT, Singapore")
for (z in 1:5) {
for (i in 1:nrow(data)){
start_pt = as.character(data[i,3])
end_pt = as.character(destination_list[z])
doc = mp_directions(
origin = start_pt,
destination = end_pt,
alternatives = FALSE,
mode = "transit",
key = key,
quiet = TRUE
)
r = mp_get_routes(doc)
time = r$duration_text
if (str_detect(time, "hour")==TRUE) {
t <- str_extract_all(time, regexp)
converted <- (as.numeric(t[[1]][1])*60)+as.numeric(t[[1]][2])
}
else {
converted <- as.numeric(str_extract(time, regexp))
}
data[i,z+3] <- converted
}
}
minimum=apply(data, 1, function(x) names((sort(x))[1]))
minimum2=apply(data, 1, function(x) names((sort(x))[2]))
minimum3=apply(data, 1, function(x) names((sort(x))[3]))
minimum4=apply(data, 1, function(x) names((sort(x))[4]))
minimum5=apply(data, 1, function(x) names((sort(x))[5]))
data$first_choice <- minimum
data$second_choice <- minimum2
data$third_choice <- minimum3
data$fourth_choice <- minimum4
data$fifth_choice <- minimum5
datat <- data %>%
select(Name, Region, c(first_choice:fifth)) %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE)
datat <- data %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice,fifth_choice .by_group=TRUE)
datat <- data %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice,fifth_choice, .by_group=TRUE)
View(datat)
View(data)
data[37,2]
data[37,2] <- UK
data[37,2] <- "UK"
datat <- datat %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE)
datat <- data %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice, .by_group=TRUE)
datat <- data %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
group_by(Region) %>%
arrange(first_choice,second_choice,third_choice,fourth_choice,fifth_choice, .by_group=TRUE)
data %>% count(Region, first_choice) %>% arrange(desc(n))
datat %>% count(Region, first_choice) %>% arrange(desc(n))
View(data)
datat <- data %>% arrange(desc(Bishan))
View(datat)
datat <- data %>% group_by(Region) %>% arrange(Bishan)
datat <- data %>% group_by(Region) %>% arrange(Bishan, .by_group=TRUE)
datat <- data %>% group_by(Region) %>% arrange(Bishan, .by_group=TRUE) %>% slice_head(n=8)
play <- datat
View(play)
play <- data
View(play)
play %>% filter(Region==AUS)
play %>% filter(Region=="AUS")
play %>% filter(Region=="AUS") %>% group_by(first_choice)
play <- datat %>% filter(Region=="AUS") %>% group_by(first_choice)
View(play)
play <- datat %>% filter(Region=="AUS") %>% arrange(first_choice)
play <- datat %>% filter(first_choice=="Bishan") %>% arrange(Region)
play <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan") %>% arrange(Region)
View(play)
data %>% count(Region, first_choice)
play <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(Region=="AUS") %>% arrange(first_choice, second_choice)
View(play)
play <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region)
play$allocation = 0
datat$allocation = 0
play <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>% mutate(allocation="Group 1")
View(play)
play <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=2) %>%
mutate(allocation="Group 1")
Group1 <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=2)
Group1 <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=3)
View(Group1)
Group1 <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=3) %>%
ungroup() %>%
slice_head(n=8)
Group1 <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=3) %>%
ungroup() %>%
slice_head(n=8)
Group1 <- datat %>%
select(Name, Region, c(first_choice:fifth_choice)) %>%
filter(first_choice=="Bishan"|second_choice=="Bishan") %>%
group_by(Region) %>%
slice_head(n=3) %>%
ungroup() %>%
slice_head(n=8)
Group1
