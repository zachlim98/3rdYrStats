legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='x',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br>",
"<extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='x',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br><extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", sex=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{sex}",
"<br>Years left:%{y: .2f}</br><extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
setpl <- df$smoker
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{setpl}",
"<br>Years left:%{y: .2f}</br><extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br><extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
fig
fig <- df %>% plot_ly(x=~group, y=~mean, type="bar", text=df$smoker,
transforms = list(list(type="groupby",
groups=df$smoker,
styles=list(
list(target="No", value=list(marker=list(color='blue'))),
list(target="Yes", value=list(marker=list(color='darkred')))
))), hoverinfo='skip',
hovertemplate = paste("Smoker: %{text}",
"<br>Years left:%{y: .2f}</br><extra></extra>")) %>%
layout(barmode="group",
title="Comparison of Years Left to Live",
xaxis=list(title="Age Group Quartiles"),
yaxis=list(title="Years left to live"),
showlegend=TRUE,
legend=list(title=list(text="<b>Smoker?</b>")))
library(tidyverse)
library(dplyr)
library(plotly)
runif(10)
hist(runif(10))
hist(runif(100))
hist(runif(10000))
hist(runif(1000000))
hist(runif(10, 0, 10))
hist(runif(100, 0, 10))
hist(runif(1000000, 0, 10))
density <- dunif(seq(-1,2,0.01)))
density <- dunif(seq(-1,2,0.01))
plot(density)
punif(0.37629)
density <- dunif(seq(-1,2,0.01), -1,2)
plot(density)
density <- dunif(seq(-1,2,0.01), -1,3)
plot(density)
density <- dunif(seq(-1,2,0.01), 0,3)
plot(density)
density <- dunif(seq(-1,2,0.01), 0,5)
plot(density)
density <- dunif(seq(-1,2,0.01), 0,10)
plot(density)
density <- dunif(seq(-1,2,0.01), 0,1)
plot(density)
seq(-1,2)
seq(-1,2,0.01)
density <- dunif(seq(-1,2,0.01))
plot(density)
density
y_var <- seq(-1,2,0.01)
density_plot <- bind_cols(y_var, density)
plot(density_plot)
density <- dunif(seq(-1,2,0.01), 0, 0.5)
density_plot <- bind_cols(y_var, density)
plot(density_plot)
plot(density_plot, xlab("fun"))
plot(density_plot, xlab("Numbers"), ylab("Density"))
plot(density_plot, xlab("Numbers"), ylab("Probability Density"))
punif(0.37629)
sample(1, 100, prob = c(0.3, 0.7))
sample(100, 1, prob = c(0.3, 0.7))
sample(100, 1, prob = 0.7)
sample(c(1,0), 100, prob =c(0.7,0.3))
sample(c(1,0), 100, prob =c(0.7,0.3), replace=TRUE)
vote_sample <- sample(c(1,0), 100, prob =c(0.7,0.3), replace=TRUE)
sum(vote_sample)/length(vote_sample)
rbinom(100, 1, 0.7)
rbinom(1, 100, 0.7)
Pandemics <- seq(0, 20, 1)
Density <- dpois(Pandemics, 1)
plot(Pandemics, Density, type = "l", main = "Lambda = 1")
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5),xaxt="n")
axis(1,at=seq(1,10,1), las = 1)
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5),)
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5))
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5))
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), xlab("Number of Pandemics"))
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5))
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), ylab = "Density")
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), ylab = "Density", xlab="Number of Pandemics")
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), ylab = "Density", xlab="Number of Pandemics", title="Lambda = 1")
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), ylab = "Density", xlab="Number of Pandemics", main="Lambda = 1")
plot(Pandemics, Density, type = "l", main = "Lambda = 1")
plot(dpois(seq(0,20,1),1),xlim = c(0,20), ylim = c(0.0,0.5), ylab = "Density", xlab="Number of Pandemics", main="Lambda = 1")
kenya <- read_csv("kenya.csv")
swden <- read_csv("sweden.csv")
sweden <- read_csv("sweden.csv")
world <- read_csv("world.csv")
asfr <- function(data) {
data %>%
mutate(
asfr = births / py.women) %>%
select(period, age, asfr) %>%
data.frame() # Convert tibble to data frame
}
asfr(kenya)
asfr(sweden)
asfr(world)
tfr <- function(data) {
out <- asfr(data)
out %>%
group_by(period) %>%
summarise(
tfr = 5 * sum(asfr))
}
tfr(kenya)
tfr(sweden)
tfr(world)
asdr <- function(data) {
data %>%
mutate(
asdr = 1000 * deaths / (py.men + py.women)) %>%
select(period, age, asdr) %>%
data.frame() # Convert tibble to data frame
}
asdr(kenya)
asdr(sweden)
asdr(world)
# Collect ASFR and ASDR for each unit
ken <- left_join(asfr(kenya), asdr(kenya))
swe <- left_join(asfr(sweden), asdr(sweden))
wor <- left_join(asfr(world), asdr(world))
# Create one data frame with all results
df <- rbind(ken, swe, wor)
df$country <- c(rep("Kenya", 30), rep("Sweden", 30), rep("World", 30))
# Transform age groups to ordered factor
df$age <- factor(df$age,
levels = c("0-4", "5-9", "10-14",
"15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-69", "70-79", "80+"))
# Age groups for reproductive age range
age_groups <- c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49")
# Visualise ASFR
g1 <- ggplot(subset(df, age %in% age_groups), # Limit age range
aes(age, 1000 * asfr, fill = country)) + # Modify rate and colour code by country
geom_col() + # Show as columns
labs(x = "Age", y = "Age-specific fertility rate per 1000 women") + # Axis labels
scale_fill_viridis_d() + # Choose a nice colour palette
facet_grid(country ~ period) + # Stratify plot by country and period
theme_bw() + # Remove redundant lines
theme(
legend.position = "none",
axis.text.x = element_text(angle = 90))
g1
# Visualise ASDR
g2 <- ggplot(df, aes(age, asdr, fill = country)) + # Colour code by country
geom_col() + # Show as columns
scale_y_continuous(breaks = seq(0, 200, 50)) + # Y-axis scale
labs(x = "Age", y = "Age-specific death rate per 1000 population") + # Axis labels
scale_fill_viridis_d(option = "plasma") + # Choose a nice colour palette
facet_grid(country ~ period) + # Stratify plot by country and period
theme_bw() + # Remove redundant lines
theme(
legend.position = "none",
axis.text.x = element_text(angle = 90))
g2
View(df)
fig <- df %>% filter(period="1950-1955")
fig <- df %>% filter(period=="1950-1955")
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar")
fig
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar", mode="stacked")
fig
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar", barmode="group")
fig
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="group")
fig
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig
fig <- df %>% filter(period=="1950-1955") %>%
plot_ly(x=~age, y=~asdr, type="bar", group=~country) %>%
layout(barmode="stack")
fig <- df %>% filter(period=="1950-1955") %>% group_by(country)
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country)
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="group")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="group")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(mode="group")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="group")
fig
fig <- df %>% filter(period=="1950-1955") %>% group_by(country) %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig
fig <- ggplotly(g1)
fig
fig <- ggplotly(g1, tooltip = c("age","asfr"))
fig
fig <- ggplotly(g1, tooltip = c("age","1000 * asfr"))
fig
unique(df$country)
fig1 <- df %>% filter(period=="1950-1955" & country="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig1 <- df %>% filter(period=="1950-1955" & country="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig1 <- df %>% filter(period=="1950-1955" && country="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig1 <- df %>% filter(period=="1950-1955" & country="Kenya")
fig1 <- df %>% filter(period=="1950-1955" & country=="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig1
fig2 <- df %>% filter(period=="1950-1955" & country=="Sweden") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig3 <- df %>% filter(period=="1950-1955" & country=="world") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig <- subplot(fig1, fig2, fig3)
fig
fig3 <- df %>% filter(period=="1950-1955" & country=="World") %>%
plot_ly(x=~age, y=~asdr, type="bar") %>%
layout(barmode="stack")
fig <- subplot(fig1, fig2, fig3)
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3)
fig
fig1 <- df %>% filter(period=="1950-1955" & country=="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Kenya") %>%
layout(barmode="stack")
fig2 <- df %>% filter(period=="1950-1955" & country=="Sweden") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Sweden") %>%
layout(barmode="stack")
fig3 <- df %>% filter(period=="1950-1955" & country=="World") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="World") %>%
layout(barmode="stack")
fig <- subplot(fig1, fig2, fig3, nrows = 3)
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE)
fig
fig1 <- df %>% filter(period=="1950-1955" & country=="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Kenya")
fig2 <- df %>% filter(period=="1950-1955" & country=="Sweden") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Sweden")
fig3 <- df %>% filter(period=="1950-1955" & country=="World") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="World")
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE)
fig
fig1 <- df %>% filter(period=="1950-1955" & country=="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Kenya",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig2 <- df %>% filter(period=="1950-1955" & country=="Sweden") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Sweden",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig3 <- df %>% filter(period=="1950-1955" & country=="World") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="World",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE)
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE) %>%
layout(title="ASDR for countries")
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"),)
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleX=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age")
yaxis1=list(title="ASDRF"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis1=list(title="ASDRF"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDRF"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, shareY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=TRUE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR for countries",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, nrows = 3, ncol = 3, shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig4 <- df %>% filter(period=="2005-2010" & country=="Kenya") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Kenya",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig5 <- df %>% filter(period=="2005-2010" & country=="Sweden") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="Sweden",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig6 <- df %>% filter(period=="2005-2010" & country=="World") %>%
plot_ly(x=~age, y=~asdr, type="bar", name="World",
hovertemplate= paste('ASDR: %{y: .2f}'))
fig <- subplot(fig1, fig2, fig3, fig4, fig5, fig6,
nrows = 3, ncol = 3, shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, fig4, fig5, fig6, shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, fig4, fig5, fig6, nrow = 3 ,shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
fig <- subplot(fig1, fig2, fig3, fig4, fig5, fig6, nrow = 2 ,shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig <- subplot(fig1, fig2, fig3, fig4, fig5, fig6, nrows = 2 ,shareX = TRUE, titleY=FALSE) %>%
layout(title="ASDR comparison",
xaxis=list(title="Age"),
yaxis=list(title="ASDR"))
fig
ggfig <- ggplotly(g1)
ggfig
ggfig <- ggplotly(g1, tooltip = c("age","1000*asfr"))
ggfig
ggfig <- ggplotly(g1, tooltip = c("age","1000 * asfr"))
ggfig
